scalar Date

type Location {
  id: Int!
  country: String!
  state: String!
  city: String!
}

type CEO {
  id: Int!
  name: String!
  age: Int!
  years_in_position: Int!
  previous_company: String!
  location_id: Int!
}

type Company {
  id: Int!
  company_name: String!
  ticker: String!
  industry: String!
  market_cap: Int!
  stock_price: String!
  annual_change_percentage: String!
  pe_ratio: String!
  last_update: String!
  ceo_id: Int!
  location_id: Int!
}

type Query {
  companies(filter: CompanyFilter, sort: SortInput, pagination: PaginationInput): [Company!]!
  ceos(filter: CEOFilter, sort: SortInput, pagination: PaginationInput): [CEO!]!
  locations(filter: LocationFilter, sort: SortInput, pagination: PaginationInput): [Location!]!
}

type Mutation {
  createCompany(input: CompanyInput!): Company!
  updateCompany(id: Int!, input: CompanyInput!): Company!
  deleteCompany(id: Int!): Company!

  createCEO(input: CEOInput!): CEO!
  updateCEO(id: Int!, input: CEOInput!): CEO!
  deleteCEO(id: Int!): CEO!

  createLocation(input: LocationInput!): Location!
  updateLocation(id: Int!, input: LocationInput!): Location!
  deleteLocation(id: Int!): Location!
}

input CompanyInput {
  company_name: String!
  ticker: String!
  industry: String!
  market_cap: Int!
  stock_price: String!
  annual_change_percentage: String!
  pe_ratio: String!
  last_update: Date!
  ceo_id: Int!
  location_id: Int!
}

input CEOInput {
  name: String!
  age: Int!
  years_in_position: Int!
  previous_company: String!
  location_id: Int!
}

input LocationInput {
  country: String!
  state: String!
  city: String!
}

input CompanyFilter {
  industry: String
  market_cap_min: Int
  market_cap_max: Int
}

input CEOFilter {
  years_in_position: NumberFilter
  name: StringFilter
}

input LocationFilter {
  country: String
  city: String
}

input NumberFilter {
  equals: Int
  greater_than: Int
  less_than: Int
  greater_or_equal: Int
  less_or_equal: Int
}

input StringFilter {
  equals: String
  contains: String
  not_contains: String
}

input SortInput {
  field: String!
  order: String!
}

input PaginationInput {
  page: Int!
  pageSize: Int!
}